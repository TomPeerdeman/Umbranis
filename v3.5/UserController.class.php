<?php	//Dit bestand kan alleen vanuit de index aangeroepen worden	if(!defined("INDEX"))die("NO INDEX!");	class UserController{		public $logged_in = false;		public $username;		public $admin_rights = false;				public function __construct(){							if(isset($_SESSION['username'])){					//Gebruikers die meer dan 30 min inactief zijn uitloggen (gebeurt alleen bij ingelogde gebruikers!)				DB::$db->query("UPDATE users SET last_action=0 WHERE last_action !=0  AND " . time() . " - last_action > 1800");								//Gebruiker object vullen				$this->login($_SESSION['username']);			}		}				public function login($username, $newlogin = false){			$res = DB::$db->query("SELECT username, last_action, admin_rights FROM users WHERE username='" . $username . "' LIMIT 1");			if($res->rowCount() != 1){				//User die aangemeld moet worden bestaat niet?				return;			}			$row = $res->fetch();			if($row['last_action'] > 0 || $newlogin){				$this->logged_in = true;				$this->username = $row['username'];				$this->admin_rights = $row['admin_rights'];								//Laatse actie tijdstip updaten				DB::$db->query("UPDATE users SET last_action=" . time() . " WHERE username='" . $this->username . "' LIMIT 1");			}else{				//Achtergebleven sessie weghalen (Er bestaat een sessie maar in de db staat de gebruiker als uitgelogd)				session_unset();			}		}				public function logout(){			//eindig sessie			session_unset();						//Gebruiker op uitgelogd zetten in de db.			DB::$db->query("UPDATE users SET last_action=0 WHERE username='" . $this->username . "' LIMIT 1");						//Gebruiker uitladen			$this->logged_in = false;			$this->username = null;			$this->admin_rights = false;		}			public function is_admin(){			return $this->admin_rights;		}				public function is_member(){			return $this->logged_in;		}	}?>